name: Publish Draft Release on pyproject.toml version change
permissions:
  contents: write
  pull-requests: write
on:
  pull_request:
    paths:
      - "pyproject.toml"  # Only run when pyproject.toml changes
    branches:
      - main  # Only run on main branch changes
    types:
      - closed

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Extract version from pyproject.toml
        run: echo "VERSION=v$(poetry version --short)" >> $GITHUB_ENV
      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "${VERSION}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Remove release if it already exists
        if: env.TAG_EXISTS == 'true'
        run: |
          gh release delete $VERSION --cleanup-tag --yes --repo $GITHUB_REPOSITORY
          git tag -d $VERSION
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Create GitHub Release Draft
        if: env.TAG_EXISTS == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false
